{"code":"import { __decorate } from \"tslib\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { property, customElement } from 'lit/decorators.js';\r\nlet SettingsRow = class SettingsRow extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.threeLine = false;\r\n    }\r\n    render() {\r\n        return html `\n      <div class=\"info\">\n        <slot name=\"heading\"></slot>\n        <div class=\"secondary\"><slot name=\"description\"></slot></div>\n      </div>\n      <slot></slot>\n    `;\r\n    }\r\n    static get styles() {\r\n        return css `\n      :host {\n        display: flex;\n        flex-direction: row;\n        padding: 0px 16px;\n        align-items: center;\n        min-height: 72px;\n      }\n      :host([large]) {\n        align-items: normal;\n        flex-direction: column;\n        border-top: 1px solid var(--divider-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 16px 16px;\n      }\n      :host([narrow]) {\n        align-items: normal;\n        flex-direction: column;\n        border-bottom: none;\n        border-top: 1px solid var(--divider-color);\n        padding: 16px 16px;\n      }\n      :host([nested]) {\n        border: none;\n        padding: 8px 16px 16px 16px;\n        margin-top: -16px;\n        min-height: 40px;\n      }\n      :host([nested]:not([narrow])) {\n        padding: 16px 16px 16px 32px;\n      }\n      :host([first]) {\n        border-top: none;\n      }\n      :host([last]) {\n        border-bottom: none;\n      }\n      :host([dialog]) {\n        border: none;\n        padding: 12px 0px;\n      }\n      ::slotted(ha-switch) {\n        padding: 16px 0;\n      }\n      .info {\n        flex: 1 0 60px;\n        margin-bottom: 4px;\n      }\n      :host([large]) .info,\n      :host([narrow]) .info {\n        flex: 1 0 40px;\n      }\n      :host([nested]) .info {\n        flex: 1 0 26px;\n      }\n      :host([dialog]) .info {\n        flex: 1 0 40px;\n        padding-bottom: 8px;\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n        margin-top: 4px;\n      }\n      :host(:not([large]):not([narrow])):not([dialog])) ::slotted(*) {\n        max-width: 66%;\n      }\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property({ type: Boolean, reflect: true })\r\n], SettingsRow.prototype, \"narrow\", void 0);\r\n__decorate([\r\n    property({ type: Boolean, reflect: true })\r\n], SettingsRow.prototype, \"large\", void 0);\r\n__decorate([\r\n    property({ type: Boolean, attribute: 'three-line' })\r\n], SettingsRow.prototype, \"threeLine\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], SettingsRow.prototype, \"nested\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], SettingsRow.prototype, \"dialog\", void 0);\r\nSettingsRow = __decorate([\r\n    customElement('settings-row')\r\n], SettingsRow);\r\nexport { SettingsRow };\r\n","references":["/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/index.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/decorators.d.ts"]}
