{"code":"import { __decorate } from \"tslib\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { property, customElement } from 'lit/decorators.js';\r\nimport './effortlesshome-chip';\r\nlet effortlesshomeChipSet = class effortlesshomeChipSet extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.value = [];\r\n    }\r\n    render() {\r\n        if (!this.items)\r\n            return html ``;\r\n        return html `\n      ${Object.values(this.items).map(e => html `\n          <effortlesshome-chip\n            value=\"${e.value}\"\n            ?checked=${this.value.includes(e.value)}\n            .badge=${e.badge}\n            ?selectable=${this.selectable}\n            ?checkmark=${this.selectable}\n            clickable\n            @value-changed=${this._itemChanged}\n          >\n            ${e.name}\n          </effortlesshome-chip>\n        `)}\n    `;\r\n    }\r\n    _itemChanged(ev) {\r\n        const value = ev.target.checked;\r\n        const key = String(ev.detail);\r\n        if (this.selectable) {\r\n            if (this.value.includes(key) && !value)\r\n                this.value = this.value.filter(e => e != key);\r\n            else if (!this.value.includes(key) && value)\r\n                this.value = [...this.value, key];\r\n            const myEvent = new CustomEvent('value-changed', { detail: this.value });\r\n            this.dispatchEvent(myEvent);\r\n        }\r\n        else {\r\n            const myEvent = new CustomEvent('value-changed', { detail: key });\r\n            this.dispatchEvent(myEvent);\r\n        }\r\n    }\r\n    static get styles() {\r\n        return css `\n      :host {\n        display: flex;\n        flex-direction: row;\n        flex: 1;\n        margin: 0px -4px;\n        flex-wrap: wrap;\n      }\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], effortlesshomeChipSet.prototype, \"items\", void 0);\r\n__decorate([\r\n    property()\r\n], effortlesshomeChipSet.prototype, \"value\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], effortlesshomeChipSet.prototype, \"selectable\", void 0);\r\neffortlesshomeChipSet = __decorate([\r\n    customElement('effortlesshome-chip-set')\r\n], effortlesshomeChipSet);\r\nexport { effortlesshomeChipSet };\r\n","references":["/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/index.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/decorators.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/components/effortlesshome-chip.ts"]}
