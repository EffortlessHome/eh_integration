{"code":"import { html } from 'lit';\r\nimport { platform, AlarmStates, AlarmCommands } from './const';\r\nimport { EArmModes } from './types';\r\nimport { fireEvent } from './fire_event';\r\nexport function getDomain(entity) {\r\n    const entity_id = typeof entity == 'string' ? entity : entity.entity_id;\r\n    return String(entity_id.split('.').shift());\r\n}\r\nexport function prettyPrint(input) {\r\n    input = input.replace('_', ' ');\r\n    return input.charAt(0).toUpperCase() + input.slice(1);\r\n}\r\nexport function computeName(entity) {\r\n    if (!entity)\r\n        return '(unrecognized entity)';\r\n    if (entity.attributes && entity.attributes.friendly_name)\r\n        return entity.attributes.friendly_name;\r\n    else\r\n        return String(entity.entity_id.split('.').pop());\r\n}\r\nexport function getAlarmEntity(hass) {\r\n    return String(hass.panels[platform].config.entity_id);\r\n}\r\nexport function isEqual(...arr) {\r\n    return arr.every(e => JSON.stringify(e) === JSON.stringify(arr[0]));\r\n}\r\nexport function Unique(arr) {\r\n    let res = [];\r\n    arr.forEach(item => {\r\n        if (!res.find(e => (typeof item === 'object' ? isEqual(e, item) : e === item)))\r\n            res.push(item);\r\n    });\r\n    return res;\r\n}\r\nexport function Without(array, item) {\r\n    return array.filter(e => e !== item);\r\n}\r\nexport function pick(obj, keys) {\r\n    if (!obj)\r\n        return {};\r\n    return Object.entries(obj)\r\n        .filter(([key]) => keys.includes(key))\r\n        .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\r\n}\r\nexport function flatten(arr) {\r\n    if (arr.every(val => !Array.isArray(val))) {\r\n        return arr.slice();\r\n    }\r\n    return arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatten(val) : val), []);\r\n}\r\nexport const omit = (obj, ...keys) => {\r\n    const ret = {};\r\n    let key;\r\n    for (key in obj) {\r\n        if (!keys.includes(key)) {\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n};\r\nexport function isDefined(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\nexport function IsEqual(obj1, obj2) {\r\n    if (obj1 === null || obj2 === null)\r\n        return obj1 === obj2;\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    if (keys1.length !== keys2.length)\r\n        return false;\r\n    for (const key of keys1) {\r\n        if (typeof obj1[key] === 'object' && typeof obj2[key] === 'object') {\r\n            if (!IsEqual(obj1[key], obj2[key]))\r\n                return false;\r\n        }\r\n        else if (obj1[key] !== obj2[key])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nexport function showErrorDialog(ev, error) {\r\n    const elem = ev.hasOwnProperty('tagName') ? ev : ev.target;\r\n    fireEvent(elem, 'show-dialog', {\r\n        dialogTag: 'error-dialog',\r\n        dialogImport: () => import('./dialogs/error-dialog'),\r\n        dialogParams: { error: error },\r\n    });\r\n}\r\nexport function handleError(err, ev) {\r\n    const errorMessage = html `\n    <b>Something went wrong!</b>\n    <br />\n    ${err.body.message\r\n        ? html `\n          ${err.body.message}\n          <br />\n          <br />\n        `\r\n        : ''}\n    ${err.error}\n    <br />\n    <br />\n    Please\n    report\n    the bug.\n  `;\r\n    showErrorDialog(ev, errorMessage);\r\n}\r\nexport const commandToState = (command) => {\r\n    switch (command) {\r\n        case AlarmCommands.COMMAND_ALARM_DISARM:\r\n            return AlarmStates.STATE_ALARM_DISARMED;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_HOME:\r\n            return AlarmStates.STATE_ALARM_ARMED_HOME;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_AWAY:\r\n            return AlarmStates.STATE_ALARM_ARMED_AWAY;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_NIGHT:\r\n            return AlarmStates.STATE_ALARM_ARMED_NIGHT;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_CUSTOM_BYPASS:\r\n            return AlarmStates.STATE_ALARM_ARMED_CUSTOM_BYPASS;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_VACATION:\r\n            return AlarmStates.STATE_ALARM_ARMED_VACATION;\r\n        default:\r\n            return undefined;\r\n    }\r\n};\r\nexport const filterState = (state, config) => {\r\n    var _a, _b, _c, _d, _e;\r\n    if (!state)\r\n        return false;\r\n    switch (state) {\r\n        case AlarmStates.STATE_ALARM_ARMED_AWAY:\r\n            return (_a = config[EArmModes.ArmedAway]) === null || _a === void 0 ? void 0 : _a.enabled;\r\n        case AlarmStates.STATE_ALARM_ARMED_HOME:\r\n            return (_b = config[EArmModes.ArmedHome]) === null || _b === void 0 ? void 0 : _b.enabled;\r\n        case AlarmStates.STATE_ALARM_ARMED_NIGHT:\r\n            return (_c = config[EArmModes.ArmedNight]) === null || _c === void 0 ? void 0 : _c.enabled;\r\n        case AlarmStates.STATE_ALARM_ARMED_CUSTOM_BYPASS:\r\n            return (_d = config[EArmModes.ArmedCustom]) === null || _d === void 0 ? void 0 : _d.enabled;\r\n        case AlarmStates.STATE_ALARM_ARMED_VACATION:\r\n            return (_e = config[EArmModes.ArmedVacation]) === null || _e === void 0 ? void 0 : _e.enabled;\r\n        default:\r\n            return true;\r\n    }\r\n};\r\nexport function Assign(obj, changes) {\r\n    Object.entries(changes).forEach(([key, val]) => {\r\n        if (key in obj && typeof obj[key] == 'object' && obj[key] !== null)\r\n            obj = Object.assign(Object.assign({}, obj), { [key]: Assign(obj[key], val) });\r\n        else\r\n            obj = Object.assign(Object.assign({}, obj), { [key]: val });\r\n    });\r\n    return obj;\r\n}\r\nexport function sortAlphabetically(a, b) {\r\n    const stringVal = (s) => typeof s === 'object' ? stringVal(s.name) : s.trim().toLowerCase();\r\n    return stringVal(a) < stringVal(b) ? -1 : 1;\r\n}\r\nexport const navigate = (_node, path, replace = false) => {\r\n    if (replace) {\r\n        history.replaceState(null, \"\", path);\r\n    }\r\n    else {\r\n        history.pushState(null, \"\", path);\r\n    }\r\n    fireEvent(window, \"location-changed\", {\r\n        replace\r\n    });\r\n};\r\nexport function computeDomain(entityId) {\r\n    return entityId.substr(0, entityId.indexOf(\".\"));\r\n}\r\nexport function computeEntity(entityId) {\r\n    return entityId.substr(entityId.indexOf(\".\") + 1);\r\n}\r\nexport function domainIcon(domain, state) {\r\n    const fixedIcons = {\r\n        alert: \"mdi:alert\",\r\n        automation: \"mdi:playlist-play\",\r\n        calendar: \"mdi:calendar\",\r\n        camera: \"mdi:video\",\r\n        climate: \"mdi:thermostat\",\r\n        configurator: \"mdi:settings\",\r\n        conversation: \"mdi:text-to-speech\",\r\n        device_tracker: \"mdi:account\",\r\n        fan: \"mdi:fan\",\r\n        group: \"mdi:google-circles-communities\",\r\n        history_graph: \"mdi:chart-line\",\r\n        homeassistant: \"mdi:home-assistant\",\r\n        homekit: \"mdi:home-automation\",\r\n        image_processing: \"mdi:image-filter-frames\",\r\n        input_boolean: \"mdi:drawing\",\r\n        input_datetime: \"mdi:calendar-clock\",\r\n        input_number: \"mdi:ray-vertex\",\r\n        input_select: \"mdi:format-list-bulleted\",\r\n        input_text: \"mdi:textbox\",\r\n        light: \"mdi:lightbulb\",\r\n        mailbox: \"mdi:mailbox\",\r\n        notify: \"mdi:comment-alert\",\r\n        person: \"mdi:account\",\r\n        plant: \"mdi:flower\",\r\n        proximity: \"mdi:apple-safari\",\r\n        remote: \"mdi:remote\",\r\n        scene: \"mdi:google-pages\",\r\n        script: \"mdi:file-document\",\r\n        sensor: \"mdi:eye\",\r\n        simple_alarm: \"mdi:bell\",\r\n        sun: \"mdi:white-balance-sunny\",\r\n        switch: \"mdi:flash\",\r\n        timer: \"mdi:timer\",\r\n        updater: \"mdi:cloud-upload\",\r\n        vacuum: \"mdi:robot-vacuum\",\r\n        water_heater: \"mdi:thermometer\",\r\n        weblink: \"mdi:open-in-new\"\r\n    };\r\n    if (domain in fixedIcons) {\r\n        return fixedIcons[domain];\r\n    }\r\n    switch (domain) {\r\n        case \"alarm_control_panel\":\r\n            switch (state) {\r\n                case \"armed_home\":\r\n                    return \"mdi:bell-plus\";\r\n                case \"armed_night\":\r\n                    return \"mdi:bell-sleep\";\r\n                case \"disarmed\":\r\n                    return \"mdi:bell-outline\";\r\n                case \"triggered\":\r\n                    return \"mdi:bell-ring\";\r\n                default:\r\n                    return \"mdi:bell\";\r\n            }\r\n        case \"binary_sensor\":\r\n            return state && state === \"off\"\r\n                ? \"mdi:radiobox-blank\"\r\n                : \"mdi:checkbox-marked-circle\";\r\n        case \"cover\":\r\n            return state === \"closed\" ? \"mdi:window-closed\" : \"mdi:window-open\";\r\n        case \"lock\":\r\n            return state && state === \"unlocked\" ? \"mdi:lock-open\" : \"mdi:lock\";\r\n        case \"media_player\":\r\n            return state && state !== \"off\" && state !== \"idle\"\r\n                ? \"mdi:cast-connected\"\r\n                : \"mdi:cast\";\r\n        case \"zwave\":\r\n            switch (state) {\r\n                case \"dead\":\r\n                    return \"mdi:emoticon-dead\";\r\n                case \"sleeping\":\r\n                    return \"mdi:sleep\";\r\n                case \"initializing\":\r\n                    return \"mdi:timer-sand\";\r\n                default:\r\n                    return \"mdi:z-wave\";\r\n            }\r\n        default:\r\n            return \"mdi:bookmark\";\r\n    }\r\n}\r\n","references":["/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/index.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/home-assistant-js-websocket/dist/index.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/const.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/types.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/fire_event.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/dialogs/error-dialog.ts"]}
