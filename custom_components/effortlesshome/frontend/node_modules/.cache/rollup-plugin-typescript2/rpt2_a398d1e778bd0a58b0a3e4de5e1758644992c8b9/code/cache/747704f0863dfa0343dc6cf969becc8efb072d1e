{"code":"import * as en from './languages/en.json';\nimport IntlMessageFormat from 'intl-messageformat';\nvar languages = {\n    en: en,\n};\nexport function localize(string, language, ...args) {\n    const lang = language.replace(/['\"]+/g, '');\n    var translated;\n    try {\n        translated = string.split('.').reduce((o, i) => o[i], languages[lang]);\n    }\n    catch (e) {\n        translated = string.split('.').reduce((o, i) => o[i], languages['en']);\n    }\n    if (translated === undefined)\n        translated = string.split('.').reduce((o, i) => o[i], languages['en']);\n    if (!args.length)\n        return translated;\n    const argObject = {};\n    for (let i = 0; i < args.length; i += 2) {\n        let key = args[i];\n        key = key.replace(/^{([^}]+)?}$/, '$1');\n        argObject[key] = args[i + 1];\n    }\n    try {\n        const message = new IntlMessageFormat(translated, language);\n        return message.format(argObject);\n    }\n    catch (err) {\n        return 'Translation ' + err;\n    }\n}\n","references":["/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/localize/languages/en.json","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/intl-messageformat/index.d.ts"]}
