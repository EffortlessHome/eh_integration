{"code":"import { __decorate } from \"tslib\";\nimport { LitElement, html, css } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport './effortlesshome-chip';\nlet effortlesshomeChipSet = class effortlesshomeChipSet extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.value = [];\n    }\n    render() {\n        if (!this.items)\n            return html ``;\n        return html `\n      ${Object.values(this.items).map(e => html `\n          <effortlesshome-chip\n            value=\"${e.value}\"\n            ?checked=${this.value.includes(e.value)}\n            .badge=${e.badge}\n            ?selectable=${this.selectable}\n            ?checkmark=${this.selectable}\n            clickable\n            @value-changed=${this._itemChanged}\n          >\n            ${e.name}\n          </effortlesshome-chip>\n        `)}\n    `;\n    }\n    _itemChanged(ev) {\n        const value = ev.target.checked;\n        const key = String(ev.detail);\n        if (this.selectable) {\n            if (this.value.includes(key) && !value)\n                this.value = this.value.filter(e => e != key);\n            else if (!this.value.includes(key) && value)\n                this.value = [...this.value, key];\n            const myEvent = new CustomEvent('value-changed', { detail: this.value });\n            this.dispatchEvent(myEvent);\n        }\n        else {\n            const myEvent = new CustomEvent('value-changed', { detail: key });\n            this.dispatchEvent(myEvent);\n        }\n    }\n    static get styles() {\n        return css `\n      :host {\n        display: flex;\n        flex-direction: row;\n        flex: 1;\n        margin: 0px -4px;\n        flex-wrap: wrap;\n      }\n    `;\n    }\n};\n__decorate([\n    property()\n], effortlesshomeChipSet.prototype, \"items\", void 0);\n__decorate([\n    property()\n], effortlesshomeChipSet.prototype, \"value\", void 0);\n__decorate([\n    property({ type: Boolean })\n], effortlesshomeChipSet.prototype, \"selectable\", void 0);\neffortlesshomeChipSet = __decorate([\n    customElement('effortlesshome-chip-set')\n], effortlesshomeChipSet);\nexport { effortlesshomeChipSet };\n","references":["/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/index.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/decorators.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/components/effortlesshome-chip.ts"]}
