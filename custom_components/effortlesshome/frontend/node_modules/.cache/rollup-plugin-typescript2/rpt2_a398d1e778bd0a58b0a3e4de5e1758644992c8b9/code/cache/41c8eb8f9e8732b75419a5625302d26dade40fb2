{"code":"export const getPath = () => {\n    const pairsToDict = (pairs) => {\n        let res = {};\n        for (var i = 0; i < pairs.length; i += 2) {\n            const key = pairs[i];\n            const val = i < pairs.length ? pairs[i + 1] : undefined;\n            res = Object.assign(Object.assign({}, res), { [key]: val });\n        }\n        return res;\n    };\n    const parts = window.location.pathname.split('/');\n    let path = {\n        page: parts[2] || 'general',\n        params: {},\n    };\n    if (parts.length > 3) {\n        let extraArgs = parts.slice(3);\n        if (parts.includes('filter')) {\n            const n = extraArgs.findIndex(e => e == 'filter');\n            const filterParts = extraArgs.slice(n + 1);\n            extraArgs = extraArgs.slice(0, n);\n            path = Object.assign(Object.assign({}, path), { filter: pairsToDict(filterParts) });\n        }\n        if (extraArgs.length) {\n            if (extraArgs.length % 2)\n                path = Object.assign(Object.assign({}, path), { subpage: extraArgs.shift() });\n            if (extraArgs.length)\n                path = Object.assign(Object.assign({}, path), { params: pairsToDict(extraArgs) });\n        }\n    }\n    return path;\n};\nexport const exportPath = (page, ...args) => {\n    let path = {\n        page: page,\n        params: {},\n    };\n    args.forEach(e => {\n        if (typeof e == 'string')\n            path = Object.assign(Object.assign({}, path), { subpage: e });\n        else if ('params' in e)\n            path = Object.assign(Object.assign({}, path), { params: e.params });\n        else if ('filter' in e)\n            path = Object.assign(Object.assign({}, path), { filter: e.filter });\n    });\n    const dictToString = (dict) => {\n        let keys = Object.keys(dict);\n        keys = keys.filter(e => dict[e]);\n        keys.sort();\n        let string = '';\n        keys.forEach(key => {\n            let val = dict[key];\n            string = string.length ? `${string}/${key}/${val}` : `${key}/${val}`;\n        });\n        return string;\n    };\n    let url = `/effortlesshome/${path.page}`;\n    if (path.subpage)\n        url = `${url}/${path.subpage}`;\n    if (dictToString(path.params).length)\n        url = `${url}/${dictToString(path.params)}`;\n    if (path.filter)\n        url = `${url}/filter/${dictToString(path.filter)}`;\n    return url;\n};\n","references":[]}
