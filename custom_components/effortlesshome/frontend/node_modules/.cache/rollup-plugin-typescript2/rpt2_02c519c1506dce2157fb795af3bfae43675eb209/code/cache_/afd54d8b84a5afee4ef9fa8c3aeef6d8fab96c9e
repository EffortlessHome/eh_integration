{"code":"import { __decorate } from \"tslib\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { property, customElement } from 'lit/decorators.js';\r\nimport { loadHaForm } from './load-ha-elements';\r\nimport './views/general/view-general.ts';\r\nimport './views/sensors/view-sensors.ts';\r\nimport './views/codes/view-codes.ts';\r\nimport './views/actions/view-actions.ts';\r\nimport { commonStyle } from './styles';\r\nimport { VERSION } from './const';\r\nimport { fetchUsers } from './data/websockets';\r\nimport { localize } from '../localize/localize';\r\nimport { exportPath, getPath } from './common/navigation';\r\nimport { navigate } from './helpers';\r\nlet MyAlarmPanel = class MyAlarmPanel extends LitElement {\r\n    async firstUpdated() {\r\n        window.addEventListener('location-changed', () => {\r\n            if (!window.location.pathname.includes('effortlesshome'))\r\n                return;\r\n            this.requestUpdate();\r\n        });\r\n        await loadHaForm();\r\n        this.userConfig = await fetchUsers(this.hass);\r\n        this.requestUpdate();\r\n    }\r\n    render() {\r\n        if (!customElements.get('ha-panel-config') || !this.userConfig)\r\n            return html `\n        loading...\n      `;\r\n        const path = getPath();\r\n        return html `\n      <div class=\"header\">\n        <div class=\"toolbar\">\n          <ha-menu-button .hass=${this.hass} .narrow=${this.narrow}></ha-menu-button>\n          <div class=\"main-title\">\n            ${localize('title', this.hass.language)}\n          </div>\n          <div class=\"version\">\n            v${VERSION}\n          </div>\n        </div>\n\n        <ha-tabs\n          scrollable\n          attr-for-selected=\"page-name\"\n          .selected=${path.page}\n          @iron-activate=${this.handlePageSelected}\n        >\n          <paper-tab page-name=\"general\">\n            ${localize('panels.general.title', this.hass.language)}\n          </paper-tab>\n          <paper-tab page-name=\"sensors\">\n            ${localize('panels.sensors.title', this.hass.language)}\n          </paper-tab>\n          <paper-tab page-name=\"codes\">\n            ${localize('panels.codes.title', this.hass.language)}\n          </paper-tab>\n          <paper-tab page-name=\"actions\">\n            ${localize('panels.actions.title', this.hass.language)}\n          </paper-tab>\n        </ha-tabs>\n      </div>\n      <div class=\"view\">\n        ${this.getView(path)}\n      </div>\n    `;\r\n    }\r\n    getView(path) {\r\n        const page = path.page;\r\n        switch (page) {\r\n            case 'general':\r\n                return html `\n          <alarm-view-general .hass=${this.hass} .narrow=${this.narrow} .path=${path}></alarm-view-general>\n        `;\r\n            case 'sensors':\r\n                return html `\n          <alarm-view-sensors .hass=${this.hass} .narrow=${this.narrow} .path=${path}></alarm-view-sensors>\n        `;\r\n            case 'codes':\r\n                return html `\n          <alarm-view-codes .hass=${this.hass} .narrow=${this.narrow} .path=${path}></alarm-view-codes>\n        `;\r\n            case 'actions':\r\n                return html `\n          <alarm-view-actions .hass=${this.hass} .narrow=${this.narrow} .path=${path}></alarm-view-actions>\n        `;\r\n            default:\r\n                return html `\n          <ha-card header=\"Page not found\">\n            <div class=\"card-content\">\n              The page you are trying to reach cannot be found. Please select a page from the menu above to continue.\n            </div>\n          </ha-card>\n        `;\r\n        }\r\n    }\r\n    handlePageSelected(ev) {\r\n        const newPage = ev.detail.item.getAttribute('page-name');\r\n        if (newPage !== getPath()) {\r\n            navigate(this, exportPath(newPage));\r\n            this.requestUpdate();\r\n        }\r\n        else {\r\n            scrollTo(0, 0);\r\n        }\r\n    }\r\n    static get styles() {\r\n        return css `\n      ${commonStyle} :host {\n        color: var(--primary-text-color);\n        --paper-card-header-color: var(--primary-text-color);\n      }\n      .header {\n        background-color: var(--app-header-background-color);\n        color: var(--app-header-text-color, white);\n        border-bottom: var(--app-header-border-bottom, none);\n      }\n      .toolbar {\n        height: var(--header-height);\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        padding: 0 16px;\n        font-weight: 400;\n        box-sizing: border-box;\n      }\n      .main-title {\n        margin: 0 0 0 24px;\n        line-height: 20px;\n        flex-grow: 1;\n      }\n      ha-tabs {\n        margin-left: max(env(safe-area-inset-left), 24px);\n        margin-right: max(env(safe-area-inset-right), 24px);\n        --paper-tabs-selection-bar-color: var(--app-header-selection-bar-color, var(--app-header-text-color, #fff));\n        text-transform: uppercase;\n      }\n\n      .view {\n        height: calc(100vh - 112px);\n        display: flex;\n        justify-content: center;\n      }\n\n      .view > * {\n        width: 600px;\n        max-width: 600px;\n      }\n\n      .view > *:last-child {\n        margin-bottom: 20px;\n      }\n\n      .version {\n        font-size: 14px;\n        font-weight: 500;\n        color: rgba(var(--rgb-text-primary-color), 0.9);\n      }\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], MyAlarmPanel.prototype, \"hass\", void 0);\r\n__decorate([\r\n    property({ type: Boolean, reflect: true })\r\n], MyAlarmPanel.prototype, \"narrow\", void 0);\r\n__decorate([\r\n    property()\r\n], MyAlarmPanel.prototype, \"userConfig\", void 0);\r\nMyAlarmPanel = __decorate([\r\n    customElement('alarm-panel')\r\n], MyAlarmPanel);\r\nexport { MyAlarmPanel };\r\n","references":["/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/index.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/node_modules/lit/decorators.d.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/load-ha-elements.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/styles.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/const.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/data/websockets.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/types.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/localize/localize.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/common/navigation.ts","/Users/jermiecullip/Documents/eh_integration/custom_components/effortlesshome/frontend/src/helpers.ts"]}
